@use './mixins.scss' as *;

.hero {
    position: relative;
    height: 100vh;
    display: flex;
    color: var(--mainColor);
    z-index: 1;
    background: url('/fond.webp') no-repeat;
    background-size: cover;
    @include backgroundPosition(75% top, center top, center top);
    @include flexDirection(column, row, row);
    @include alignItems(flex-end, center, center);
    @include justifyContent(space-around, space-between, space-between);
    @include padding(0 30px 0 30px, 0 50px 0 50px, 0 50px 0 50px);
    .intro {
        @include padding(40px 0 0 0, 0 0 180px 0, 0 0 180px 0);
        @include width(100%, 50%, 50%);
        h2 {
            font-weight: 800;
            text-align: left;
            @include width(50%, 100%, 100%);
            @include fontSize(22px, 48px, 48px);
        }
        p {
            font-weight: 400;
            text-align: right;
            margin-left: auto;
            @include fontSize(20px, 32px, 32px);
            @include width(50%, 70%, 70%);
        }
    }
    .action {
        display: flex;
        flex-direction: column;
        gap: 30px;
        @include padding(0 0 80px 0, 180px 0 0 0, 180px 0 0 0);
        @include width(60%, 30%, 30%);
        button {
            border: none;
            background-color: rgba(var(--glassColor), 0.05);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            box-shadow:
                inset 0 4px 4px rgba(var(--glassColor), 0.15),
                inset 0 -4px 4px rgba(var(--glassColor), 0.15),
                inset 4px 0 4px rgba(var(--glassColor), 0.15),
                inset -4px 0 4px rgba(var(--glassColor), 0.15);
            font-family: inherit;
            font-weight: 800;
            color: var(--mainColor);
            transition: background-color ease 0.3s, box-shadow ease 0.3s;
            @include borderRadius(7.5px, 15px, 15px);
            @include fontSize(24px, 48px, 48px);
            @include height(50px, 100px, 100px);
            &:hover {
                background-color: rgba(var(--glassColor), 0.15);
                box-shadow:
                    inset 0 6px 6px rgba(var(--glassColor), 0.25),
                    inset 0 -6px 6px rgba(var(--glassColor), 0.25),
                    inset 6px 0 6px rgba(var(--glassColor), 0.25),
                    inset -6px 0 6px rgba(var(--glassColor), 0.25);
                cursor: pointer;
            }
        }
    }
}
.dream{
    @include padding(0 30px, 0 100px, 0 100px);
    .content{
        display: flex;
        flex-direction: column;
        gap: 30px;
        .worker{
            display: flex;
            align-items: center;
            @include flexDirection(column, row, row);
            @include gap(10px, 30px, 30px);
            img{
                @include width(100%, 35%, 35%);
                @include borderRadius(29px, 50px, 50px);
            }
            p {
                @include width(100%, 65%, 65%);
            }
            @media (max-width: 767px) {
                flex-direction: column;
                img {
                    order: 1;
                }
                p {
                    order: 2;
                }
            }
        }
    }
}
.method{
    @include padding(0 30px, 0 100px, 0 100px);
    .list{
        display: flex;
        justify-content: space-between;
        gap: 50px;
        @include flexDirection(column, row, row);
        .column{
            display: flex;
            flex-direction: column;
            text-align: left;
            .radar{
                color: var(--radarColor);
                @include height(100px, 200px, 200px);
            }
            .fighter{
                color: var(--fighterColor);
                @include height(100px, 200px, 200px);
            }
            .tower{
                color: var(--towerColor);
                @include height(100px, 200px, 200px);
            }
        }
    }
}
.services{
    text-align: center;
    @include padding(0 30px, 0 100px, 0 100px);
    .grid{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        @include gap(30px, 50px, 50px);
        .create{
            color: var(--createColor);
            @include height(50px, 100px, 100px);
        }
        .refresh{
            color: var(--refreshColor);
            @include height(50px, 100px, 100px);
        }
        .wrench{
            color: var(--wrenchColor);
            @include height(50px, 100px, 100px);
        }
        .strategy{
            color: var(--strategyColor);
            @include height(50px, 100px, 100px);
        }
    }
}
.behind{
    @include padding(0 30px, 0 100px, 0 100px);
    .content{
        display: flex;
        flex-direction: column;
        @include gap(10px, 30px, 30px);
    }
}
.contact{
    @include padding(0 30px 30px 30px, 0 100px 50px 100px, 0 100px 50px 100px);
    .content{
        display: flex;
        flex-direction: column;
        @include gap(10px, 50px, 50px);
        .panel{ 
            display: flex;
            justify-content: space-between;
            @include flexDirection(column, row, row);
            @include gap(10px, 0, 0);
            @media (max-width: 767px) {
                .details {
                    order: 2;
                }
                .form {
                    order: 1;
                }
            }
            .details{
                display: flex;
                flex-direction: column;
                @include gap(10px, 30px, 30px);
            }
            .form{
                display: flex;
                flex-direction: column;
                @include gap(10px, 30px, 30px);
                @include width(100%, 50%, 50%);
                input, textarea{
                    width: 100%;
                    background-color: transparent;
                    border: none;
                    border-bottom: 1px solid var(--mainTextColor);
                    font-size: inherit;
                    @include height(30px, 50px, 50px);
                }
                label{
                    position: absolute;
                    @include fontSize(20px, 32px, 32px);
                }
                button{
                    width: fit-content;
                    font-weight: 800;
                    font-family: inherit;
                    border: none;
                    color: var(--secondTextColor);
                    background-color: var(--mainColor);
                    border: 1px solid transparent;
                    transition: color ease 0.3s, background-color ease 0.3s, border ease 0.3s;
                    @include borderRadius(6px, 7.5px, 7.5px);
                    @include fontSize(24px, 32px, 32px);
                    @include padding(5px 15px, 10px 15px, 10px 15px);
                    &:hover{
                        background-color: var(--mainBackgroundColor);
                        color: var(--mainColor);
                        border: 1px solid var(--mainColor);
                    }
                }
            }
        }
    }
}